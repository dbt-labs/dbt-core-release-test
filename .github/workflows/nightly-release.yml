name: Nightly Release to GitHub and PyPi

on:
  workflow_dispatch: # for manual triggering
  schedule:
    - cron: 0 2 * * *

defaults:
  run:
    shell: bash

env:
  RELEASE_BRANCH: "main"

jobs:
  aggregate-release-data:
    runs-on: ubuntu-latest

    outputs:
      commit_sha: ${{ steps.resolve-commit-sha.outputs.release_commit }}
      version_number: ${{ steps.nightly-release-version.outputs.number }}

    steps:
      - name: "Checkout ${{ github.repository }} Branch ${{ env.RELEASE_BRANCH }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_BRANCH }}

      - name: "Resolve Commit To Release"
        id: resolve-commit-sha
        run: |
          commit_sha=$(git rev-parse HEAD)
          echo "release_commit=$commit_sha" >> $GITHUB_OUTPUT

      - name: "Get Current Version Number"
        id: version-number-sources
        run: |
          current_version=`awk -F"current_version = " '{print $2}' .bumpversion.cfg | tr '\n' ' '`
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      - name: "Audit Version And Parse Into Parts"
        id: semver
        uses: dbt-labs/actions/parse-semver@users/alexander-smolyakov/parse-semver-fix-warnings
        with:
          version: ${{ steps.version-number-sources.outputs.current_version }}

      - name: "Generate Nightly Release Version Number"
        id: nightly-release-version
        run: |
          number="${{ steps.semver.outputs.base-version }}${{ steps.semver.outputs.pre-release-type }}$GITHUB_RUN_ID"
          echo "number=$number" >> $GITHUB_OUTPUT

  log-outputs-aggregate-release-data:
    runs-on: ubuntu-latest
    needs: [aggregate-release-data]

    steps:
      - name: "[DEBUG] Log Outputs"
        run: |
          echo commit_sha    : ${{ needs.aggregate-release-data.outputs.commit_sha }} 
          echo version_number: ${{ needs.aggregate-release-data.outputs.version_number }}

  release-github-pypi:
    needs: [aggregate-release-data]

    uses: ./.github/workflows/release.yml@users/alexander-smolyakov/implement-nightly-releases-workflow
    with:
      sha: ${{ needs.aggregate-release-data.outputs.commit_sha }}
      target_branch: ${{ env.RELEASE_BRANCH }}
      version_number: ${{ needs.aggregate-release-data.outputs.version_number }}
      test_run: true
